[{"D:\\BB_web_app\\REACT_ADMIN_EXAMPLE\\client\\src\\index.js":"1","D:\\BB_web_app\\REACT_ADMIN_EXAMPLE\\client\\src\\App.js":"2","D:\\BB_web_app\\REACT_ADMIN_EXAMPLE\\client\\src\\reportWebVitals.js":"3","D:\\BB_web_app\\REACT_ADMIN_EXAMPLE\\client\\src\\ProductForm.js":"4","D:\\BB_web_app\\REACT_ADMIN_EXAMPLE\\client\\src\\ProductList.js":"5"},{"size":547,"mtime":1607062960032,"results":"6","hashOfConfig":"7"},{"size":2585,"mtime":1607173635643,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":4714,"mtime":1607531226547,"results":"10","hashOfConfig":"7"},{"size":3827,"mtime":1607533030726,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"p8xtmg",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\BB_web_app\\REACT_ADMIN_EXAMPLE\\client\\src\\index.js",[],["25","26"],"D:\\BB_web_app\\REACT_ADMIN_EXAMPLE\\client\\src\\App.js",["27"],"import React, { Component } from 'react';\n//import './App.css';\nimport { Button, Container,Alert } from 'react-bootstrap';\nimport ProductList from './ProductList';\nimport ProductForm from './ProductForm';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n     // isAddProduct: false,\n      error: null,\n      response: {},\n      product: {},\n      isEditProduct: false\n    }\n    this.onFormSubmit = this.onFormSubmit.bind(this);\n  }\n\n  onCreate() {\n    this.setState({ isAddProduct: true });\n  }\n\n\n  editProduct=(productId)=>{\n      \n\n    const apiUrl =  `http://localhost:3000/products/${productId}`;\n   \n\n\n    \n    fetch(apiUrl, {\n      method: 'GET',\n      headers:{\n        'Accept':'application/json',\n        'Content-Type':'application/json',\n\n      },\n      //body: formData\n\n\n\n    })\n      .then((res) => {\n     // console.log(res.message);\n       return res.json();} )\n      .then(result => {\n       //console.log(result);\n        this.setState({\n          product: result,\n          \n          isEditProduct:true\n        })\n      },\n      (error) => {\n        this.setState({ error });\n      }\n    )\n  }\n\n\n\n  onFormSubmit(data) {\n\n    let apiUrl = `http://localhost:3000/products/${data.id}`;\n\n  \n    fetch(apiUrl, {\n      method: 'PUT',\n      headers:{\n        'Accept':'application/json',\n        'Content-Type':'application/json',\n\n      },\n      body: JSON.stringify(data)\n\n\n\n    })\n      .then((res) => {\n     // console.log(res.message);\n       return res.json();} )\n      .then(result => {\n       //console.log(result);\n        this.setState({\n          response: result,\n          isEditProduct: false\n        })\n      },\n      (error) => {\n        this.setState({ error });\n      }\n    )\n  }\n\n  render() {\n\n    return (\n      <div className=\"App\">\n        <Container>\n        {!this.state.isEditProduct && <h1 style={{textAlign:'center'}}>Truck's List</h1>}\n          {/* {!this.state.isEditProduct && <Button variant=\"primary\" onClick={() => this.onCreate()}>Add Product</Button>} */}\n          {this.state.response.status === 'success' && <div><br /><Alert variant=\"info\">{this.state.response.message}</Alert></div>}\n          {!this.state.isEditProduct && <ProductList  editProduct={this.editProduct}/>}\n          {this.state.isEditProduct && <ProductForm onFormSubmit={this.onFormSubmit} product={this.state.product}/>}\n          {this.state.error && <div>Error: {this.state.error.message}</div>}\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n\n//LEFT OVER\n\n//1)IMAGE FETCHING \n//2)ORIGINAL APIs\n","D:\\BB_web_app\\REACT_ADMIN_EXAMPLE\\client\\src\\reportWebVitals.js",[],"D:\\BB_web_app\\REACT_ADMIN_EXAMPLE\\client\\src\\ProductForm.js",["28","29","30","31"],"\r\nimport React from 'react';\r\nimport { Row, Form, Col, Button ,InputGroup} from 'react-bootstrap';\r\nimport './product.css';\r\n\r\nclass ProductForm extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.initialState = {\r\n        id:'',\r\n        truck_number:'',\r\n        truck_kyc_status:'',\r\n        rejection_reason:'',\r\n        chassis_number:'',\r\n        image_front: '',\r\n          image_back: '',\r\n          model: '',\r\n          manufacture: 'iuhbkuj'\r\n      }\r\n\r\n      \r\n        this.state=this.props.product;\r\n      \r\n       //console.log(this.state.truck_id);\r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n  \r\n    handleChange(event) {\r\n      const name = event.target.name;\r\n      const value = event.target.value;\r\n  \r\n      this.setState({\r\n        [name]: value\r\n      })\r\n    }\r\n  \r\n    handleSubmit(event) {\r\n      event.preventDefault();\r\n      this.props.onFormSubmit(this.state);\r\n      this.setState(this.initialState);\r\n    }\r\n  \r\n    render() {\r\n      return(\r\n        <div>\r\n          <h2>Manage Truck Verification Status</h2>\r\n          <Row>\r\n            <Col sm={6}>\r\n            \r\n              <Form onSubmit={this.handleSubmit}>\r\n\r\n              <Form.Group controlId=\"truck_number\">\r\n                  <Form.Label>Truck Number</Form.Label><br/>\r\n                  <Form.Control plaintext readOnly defaultValue={this.state.truck_number} />\r\n                  \r\n                  \r\n                  {/* <TextArea>{this.state.truck_id}</Form> */}\r\n                  \r\n                </Form.Group>\r\n               \r\n               \r\n                <Form.Group controlId=\"truck_kyc_status\">\r\n                <Form.Label style={{paddingRight: 50}}>Truck KYC Status   </Form.Label>\r\n               <br/>\r\n                <select name=\"truck_kyc_status\" id=\"truck_kyc_status\" value={this.state.truck_kyc_status} onChange={this.handleChange}>\r\n                      <option value=\" NOT_SUBMITTED\">Not Submitted</option>\r\n                      <option value=\"AUTO_VERIFICATION_IN_PROGRESS\">Auto Verification In Progress</option>\r\n                       <option value=\"PENDING\">Pending</option>\r\n                      <option value=\"REJECTED\">Rejected</option>\r\n                      <option value=\"APPROVED\">Approved</option>\r\n                </select>               \r\n                </Form.Group>\r\n                {this.state.truck_kyc_status==\"REJECTED\" ?\r\n                <Form.Group controlId=\"rejection_reason\">\r\n                  <Form.Label>Rejection Reason</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    name=\"rejection_reason\"\r\n                    value={this.state.rejection_reason}\r\n                    onChange={this.handleChange}\r\n                    placeholder=\"rejection reason\" />\r\n                </Form.Group>\r\n                  :null}\r\n                <Form.Group>\r\n                <Form.Group controlId=\"chassis_number \">\r\n                  <span> <Form.Label>Chassis Number :</Form.Label></span>\r\n                       <span>{this.state.chassis_number}</span>\r\n\r\n                </Form.Group>\r\n\r\n                  <h6>Truck Document Details :</h6>\r\n                <Form.Group controlId=\"model_number \">\r\n                  <span> <Form.Label>Model Number :</Form.Label></span>\r\n                       <span>{this.state.model}</span>\r\n\r\n                </Form.Group>\r\n                <Form.Group controlId=\"manufacturer \">\r\n                  <span> <Form.Label>Manufacturer :</Form.Label></span>\r\n                       <span>{this.state.manufacture}</span>\r\n\r\n                </Form.Group>\r\n\r\n                \r\n                <Form.Group controlId=\" Rc Images \">\r\n                  <div><span className=\"front_img\">FRONT IMAGE</span>\r\n                  <span className=\"back_img\">BACK IMAGE</span></div>\r\n                  <div className=\"topDiv\">\r\n                  <span> <img className=\"img_class\" src={this.state.image_front}></img></span>\r\n                  <span><img className=\"img_class\"src={this.state.image_back}></img></span>\r\n                  </div>\r\n                     {/* <span>\r\n                      <Form.Label>Back image</Form.Label>\r\n                       <img src={this.state.image_back}></img>\r\n                       </span> */}\r\n                </Form.Group>\r\n\r\n\r\n\r\n\r\n                 <Form.Control type=\"hidden\" name=\"id\" value={this.state.id} />\r\n                 <Button variant=\"success\" type=\"submit\">Save</Button>\r\n                </Form.Group>\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n  \r\n  export default ProductForm;","D:\\BB_web_app\\REACT_ADMIN_EXAMPLE\\client\\src\\ProductList.js",["32","33","34","35","36","37","38","39","40","41","42","43"],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":3,"column":10,"nodeType":"50","messageId":"51","endLine":3,"endColumn":16},{"ruleId":"48","severity":1,"message":"52","line":3,"column":34,"nodeType":"50","messageId":"51","endLine":3,"endColumn":44},{"ruleId":"53","severity":1,"message":"54","line":74,"column":45,"nodeType":"55","messageId":"56","endLine":74,"endColumn":47},{"ruleId":"57","severity":1,"message":"58","line":109,"column":26,"nodeType":"59","endLine":109,"endColumn":82},{"ruleId":"57","severity":1,"message":"58","line":110,"column":25,"nodeType":"59","endLine":110,"endColumn":79},{"ruleId":"48","severity":1,"message":"60","line":27,"column":8,"nodeType":"50","messageId":"51","endLine":27,"endColumn":25},{"ruleId":"48","severity":1,"message":"61","line":27,"column":26,"nodeType":"50","messageId":"51","endLine":27,"endColumn":46},{"ruleId":"48","severity":1,"message":"62","line":28,"column":8,"nodeType":"50","messageId":"51","endLine":28,"endColumn":25},{"ruleId":"48","severity":1,"message":"63","line":28,"column":26,"nodeType":"50","messageId":"51","endLine":28,"endColumn":46},{"ruleId":"48","severity":1,"message":"64","line":29,"column":8,"nodeType":"50","messageId":"51","endLine":29,"endColumn":14},{"ruleId":"48","severity":1,"message":"65","line":29,"column":15,"nodeType":"50","messageId":"51","endLine":29,"endColumn":24},{"ruleId":"48","severity":1,"message":"66","line":30,"column":8,"nodeType":"50","messageId":"51","endLine":30,"endColumn":15},{"ruleId":"48","severity":1,"message":"67","line":30,"column":16,"nodeType":"50","messageId":"51","endLine":30,"endColumn":26},{"ruleId":"48","severity":1,"message":"68","line":31,"column":8,"nodeType":"50","messageId":"51","endLine":31,"endColumn":15},{"ruleId":"48","severity":1,"message":"69","line":31,"column":16,"nodeType":"50","messageId":"51","endLine":31,"endColumn":26},{"ruleId":"48","severity":1,"message":"70","line":32,"column":8,"nodeType":"50","messageId":"51","endLine":32,"endColumn":14},{"ruleId":"48","severity":1,"message":"71","line":32,"column":15,"nodeType":"50","messageId":"51","endLine":32,"endColumn":24},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'InputGroup' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'filteredProducts1' is assigned a value but never used.","'setFilteredProducts1' is assigned a value but never used.","'filteredProducts2' is assigned a value but never used.","'setFilteredProducts2' is assigned a value but never used.","'query1' is assigned a value but never used.","'setQuery1' is assigned a value but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'message' is assigned a value but never used.","'setMessage' is assigned a value but never used.","'cancel' is assigned a value but never used.","'setCancel' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]