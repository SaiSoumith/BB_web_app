[{"D:\\BB_web_app\\REACT_ADMIN_EXAMPLE\\client\\src\\index.js":"1","D:\\BB_web_app\\REACT_ADMIN_EXAMPLE\\client\\src\\App.js":"2","D:\\BB_web_app\\REACT_ADMIN_EXAMPLE\\client\\src\\reportWebVitals.js":"3","D:\\BB_web_app\\REACT_ADMIN_EXAMPLE\\client\\src\\ProductForm.js":"4","D:\\BB_web_app\\REACT_ADMIN_EXAMPLE\\client\\src\\ProductList.js":"5"},{"size":547,"mtime":1607062960032,"results":"6","hashOfConfig":"7"},{"size":2530,"mtime":1607094752295,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":4284,"mtime":1607096929640,"results":"10","hashOfConfig":"7"},{"size":2578,"mtime":1607170552637,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"p8xtmg",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},"D:\\BB_web_app\\REACT_ADMIN_EXAMPLE\\client\\src\\index.js",[],["26","27"],"D:\\BB_web_app\\REACT_ADMIN_EXAMPLE\\client\\src\\App.js",["28"],"import React, { Component } from 'react';\n//import './App.css';\nimport { Button, Container,Alert } from 'react-bootstrap';\nimport ProductList from './ProductList';\nimport ProductForm from './ProductForm';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n     // isAddProduct: false,\n      error: null,\n      response: {},\n      product: {},\n      isEditProduct: false\n    }\n    this.onFormSubmit = this.onFormSubmit.bind(this);\n  }\n\n  onCreate() {\n    this.setState({ isAddProduct: true });\n  }\n\n\n  editProduct=(productId)=>{\n      \n\n    const apiUrl =  `http://localhost:3000/products/${productId}`;\n   \n\n\n    \n    fetch(apiUrl, {\n      method: 'GET',\n      headers:{\n        'Accept':'application/json',\n        'Content-Type':'application/json',\n\n      },\n      //body: formData\n\n\n\n    })\n      .then((res) => {\n     // console.log(res.message);\n       return res.json();} )\n      .then(result => {\n       //console.log(result);\n        this.setState({\n          product: result,\n          \n          isEditProduct:true\n        })\n      },\n      (error) => {\n        this.setState({ error });\n      }\n    )\n  }\n\n\n\n  onFormSubmit(data) {\n\n    let apiUrl = `http://localhost:3000/products/${data.id}`;\n\n  \n    fetch(apiUrl, {\n      method: 'PUT',\n      headers:{\n        'Accept':'application/json',\n        'Content-Type':'application/json',\n\n      },\n      body: JSON.stringify(data)\n\n\n\n    })\n      .then((res) => {\n     // console.log(res.message);\n       return res.json();} )\n      .then(result => {\n       //console.log(result);\n        this.setState({\n          response: result,\n          isEditProduct: false\n        })\n      },\n      (error) => {\n        this.setState({ error });\n      }\n    )\n  }\n\n  render() {\n\n    return (\n      <div className=\"App\">\n        <Container>\n        {!this.state.isEditProduct && <h1 style={{textAlign:'center'}}>Truck's List</h1>}\n          {/* {!this.state.isEditProduct && <Button variant=\"primary\" onClick={() => this.onCreate()}>Add Product</Button>} */}\n          {this.state.response.status === 'success' && <div><br /><Alert variant=\"info\">{this.state.response.message}</Alert></div>}\n          {!this.state.isEditProduct && <ProductList  editProduct={this.editProduct}/>}\n          {this.state.isEditProduct && <ProductForm onFormSubmit={this.onFormSubmit} product={this.state.product}/>}\n          {this.state.error && <div>Error: {this.state.error.message}</div>}\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;","D:\\BB_web_app\\REACT_ADMIN_EXAMPLE\\client\\src\\reportWebVitals.js",[],"D:\\BB_web_app\\REACT_ADMIN_EXAMPLE\\client\\src\\ProductForm.js",["29"],"\r\nimport React from 'react';\r\nimport { Row, Form, Col, Button ,InputGroup} from 'react-bootstrap';\r\n\r\n\r\nclass ProductForm extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.initialState = {\r\n        id:'',\r\n          truck_id:'',\r\n        // product_name: '',\r\n        // price: '',\r\n        // sku: '',\r\n        document_status:'',\r\n        rejection_reason:''\r\n      }\r\n\r\n      \r\n        this.state=this.props.product;\r\n      \r\n       //console.log(this.state.truck_id);\r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n  \r\n    handleChange(event) {\r\n      const name = event.target.name;\r\n      const value = event.target.value;\r\n  \r\n      this.setState({\r\n        [name]: value\r\n      })\r\n    }\r\n  \r\n    handleSubmit(event) {\r\n      event.preventDefault();\r\n      this.props.onFormSubmit(this.state);\r\n      this.setState(this.initialState);\r\n    }\r\n  \r\n    render() {\r\n      return(\r\n        <div>\r\n          <h2>Manage Truck Verification Status</h2>\r\n          <Row>\r\n            <Col sm={6}>\r\n            \r\n              <Form onSubmit={this.handleSubmit}>\r\n\r\n              <Form.Group controlId=\"truck_id\">\r\n                  <Form.Label>Truck ID</Form.Label><br/>\r\n                  <Form.Control plaintext readOnly defaultValue={this.state.truck_id} />\r\n                  \r\n                  \r\n                  {/* <TextArea>{this.state.truck_id}</Form> */}\r\n                  \r\n                </Form.Group>\r\n               \r\n                {/* <Form.Group controlId=\"productName\">\r\n                  <Form.Label>Product Name</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    name=\"product_name\"\r\n                    value={this.state.product_name}\r\n                    onChange={this.handleChange}\r\n                    placeholder=\"Product Name\"/>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"sku\">\r\n                  <Form.Label>SKU</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    name=\"sku\"\r\n                    value={this.state.sku}\r\n                    onChange={this.handleChange}\r\n                    placeholder=\"SKU\" />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"price\">\r\n                  <Form.Label>Price</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    name=\"price\"\r\n                    value={this.state.price}\r\n                    onChange={this.handleChange}\r\n                    placeholder=\"Price\" />\r\n                </Form.Group> */}\r\n                <Form.Group controlId=\"document_status\">\r\n                <Form.Label style={{paddingRight: 50}}>Document Status   </Form.Label>\r\n               <br/>\r\n                <select name=\"document_status\" id=\"document_status\" value={this.state.document_status} onChange={this.handleChange}>\r\n                      <option value=\" NOT_SUBMITTED\">Not Submitted</option>\r\n                      <option value=\"AUTO_VERIFICATION_IN_PROGRESS\">Auto Verification In Progress</option>\r\n                       <option value=\"PENDING\">Pending</option>\r\n                      <option value=\"REJECTED\">Rejected</option>\r\n                      <option value=\"APPROVED\">Approved</option>\r\n                </select>               \r\n                </Form.Group>\r\n                {this.state.document_status===\"REJECTED\" ?\r\n                <Form.Group controlId=\"rejection_reason\">\r\n                  <Form.Label>Rejection Reason</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    name=\"price\"\r\n                    value={this.state.rejection_reason}\r\n                    onChange={this.handleChange}\r\n                    placeholder=\"rejection reason\" />\r\n                </Form.Group>\r\n                  :null}\r\n                <Form.Group>\r\n                 <Form.Control type=\"hidden\" name=\"id\" value={this.state.id} />\r\n                 <Button variant=\"success\" type=\"submit\">Save</Button>\r\n                </Form.Group>\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n  \r\n  export default ProductForm;","D:\\BB_web_app\\REACT_ADMIN_EXAMPLE\\client\\src\\ProductList.js",["30","31"],"\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Button, Table } from 'react-bootstrap';\r\nimport {useGlobalFilter} from 'react-table';\r\n\r\n\r\nfunction  ProductList(props) {\r\n  // constructor(props) {\r\n  //   super(props);\r\n  //   this.state = {\r\n  //     error: null,\r\n  //     products: []\r\n  //   }\r\n  // }\r\n\r\nconst [error,setError]=useState(null);\r\nconst  [products,setProducts]=useState([]);\r\nconst [search,setSearch]=useState('');\r\n  \r\nconst [filteredIds,setFilteredIds]=useState([]);\r\n\r\n\r\n  useEffect(()=>{\r\n\r\n  loadData();\r\n\r\n  },[]);\r\n\r\n\r\n\r\n  const loadData=()=>{\r\n\r\n   \r\n    const apiUrl = ' http://localhost:3000/products';\r\n\r\n      fetch(apiUrl)\r\n        .then(res => res.json())\r\n        .then(\r\n          (result) => {\r\n            setProducts(result);\r\n          },\r\n          (error) => {\r\n            setError(error);\r\n          }\r\n        )\r\n  }\r\n\r\n\r\n  // componentDidMount() {\r\n  //   const apiUrl = ' http://localhost:3000/products';\r\n\r\n  //   fetch(apiUrl)\r\n  //     .then(res => res.json())\r\n  //     .then(\r\n  //       (result) => {\r\n  //         this.setState({\r\n  //           products: result\r\n  //         });\r\n  //       },\r\n  //       (error) => {\r\n  //         this.setState({ error });\r\n  //       }\r\n  //     )\r\n  // }\r\n\r\n  // render() {\r\n  //   const { error, products} = this.state;\r\n\r\n   useEffect(()=>{\r\n \r\n    setFilteredIds(\r\n      products.filter((product) =>\r\n      product.truck_id.includes(search)\r\n    ));\r\n   },[search,products]);\r\n\r\n\r\n\r\n\r\n      return(\r\n        \r\n        <div>\r\n          <input type=\"text\" placeholder=\"search by ID\" onChange={e=>setSearch(e.target.value)}/>\r\n          <Table>\r\n            <thead>\r\n              <tr>\r\n                <th>Truck Id</th>\r\n                <th>Document status</th>\r\n                {/* <th>SKU</th>\r\n                <th>Price</th> */}\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {filteredIds.map(product => (\r\n                <tr key={product.id}>\r\n                  <td>{product.truck_id}</td>\r\n                  <td>{product.document_status}</td>\r\n\r\n                  {/* <td>{product.product_name}</td>\r\n                  <td>{product.sku}</td>\r\n                  <td>{product.price}</td> */}\r\n                  <td><Button variant=\"info\" onClick={()=>props.editProduct(product.id)}>\r\n                  Edit Status</Button></td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n         \r\n        </div>\r\n      );\r\n      \r\n    \r\n  \r\n}\r\n\r\nexport default ProductList;",{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":3,"column":10,"nodeType":"38","messageId":"39","endLine":3,"endColumn":16},{"ruleId":"36","severity":1,"message":"40","line":3,"column":34,"nodeType":"38","messageId":"39","endLine":3,"endColumn":44},{"ruleId":"36","severity":1,"message":"41","line":4,"column":9,"nodeType":"38","messageId":"39","endLine":4,"endColumn":24},{"ruleId":"36","severity":1,"message":"42","line":16,"column":8,"nodeType":"38","messageId":"39","endLine":16,"endColumn":13},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'InputGroup' is defined but never used.","'useGlobalFilter' is defined but never used.","'error' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]